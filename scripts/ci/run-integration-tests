#!/bin/bash

# This script is a temporary solution to run the integration tests in a <= 1.GB
# memory environment and with support for retries per test file. We should
# replace it with a test runner in the future, please see it more as a proof of
# concept

set -e

PROJECT_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../" && pwd )"
RETRIES=3

function runTestFile {
  echo "==> Running tests for $1"
  i="0"
  while [ $i -lt $RETRIES ]; do
    i=$((i+1))
    echo "==> Executing run $i for $1"
    local exit_code
    local testPath

    testPath="cypress/$(basename "$1")-${i}"

    # We don't want to let an error in the block below to end the entire script
    set +e # undo instant error flag

    npm run -s cypress -- \
      -s "$1" \
      --config "screenshotsFolder=${testPath}/screenshots,videosFolder=${testPath}/videos" \
      --reporter junit \
      --reporter-options "mochaFile=${testPath}/result.xml"

    exit_code=$?
    echo "==> Cypress exit code for $1: $exit_code"

    set -e # redo flag

    if [ $exit_code -eq 0 ]; then
      echo "==> Finished in $i runs for $1"
      return 0
    fi
  done
  echo "==> Couldn't get a success in $RETRIES retries for $1"
  exit 1
}


# Starting http-server & setting up trap
http-server -sp 4200 dist&
SERVER_PID=$!
trap "kill $SERVER_PID" EXIT

# pass in simple search strings for filenames here (find syntax)
SEARCH=${1:-'*'}

echo "Found these matching files ('./tests/${SEARCH}-cy.js')"
find $PROJECT_ROOT/tests -type f -name ${SEARCH}"-cy.js" -print | tee /dev/tty | while read file; do runTestFile "$file"; done

echo "Done running tests, merging the results now into ./cypress/results.xml"
junit-merge ./cypress/*/result.xml --out ./cypress/results.xml

echo "All done."
